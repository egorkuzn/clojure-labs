(ns lab-3.lab31-test
 (:require [clojure.test :refer :all]
           [lab-3.lab31 :refer :all]))

(deftest test-parallel-filter
  (testing "test parallel filter"
    (println "test parallel filter")
    (println (part-of `(1 2 3 4 5 6 7 8) 0 2)) 
    (println (lab-31 even? (range 100) (/ 100 8)))
    (println (lab-31 even? (range 100) (/ 100 8)))
    (println (lab-31 even? (range 100) (/ 100 8)))
    (time (println (lab-31 even? (range 0 100) (/ 100 8))))
    (println "1")
    (time (lab-31 even? (range 10000000) (/ 10000000 1)))
    (time (lab-31 even? (range 10000000) (/ 10000000 1)))
    (time (lab-31 even? (range 10000000) (/ 10000000 1)))
    (time (lab-31 even? (range 10000000) (/ 10000000 1)))
    (println "2")
    (time (lab-31 even? (range 10000000) (/ 10000000 2)))
    (time (lab-31 even? (range 10000000) (/ 10000000 2)))
    (time (lab-31 even? (range 10000000) (/ 10000000 2)))
    (time (lab-31 even? (range 10000000) (/ 10000000 2)))
    (println "4")
    (time (lab-31 even? (range 10000000) (/ 10000000 4)))
    (time (lab-31 even? (range 10000000) (/ 10000000 4)))
    (time (lab-31 even? (range 10000000) (/ 10000000 4)))
    (time (lab-31 even? (range 10000000) (/ 10000000 4)))
    (println "8")
    (time (lab-31 even? (range 10000000) (/ 10000000 8)))
    (time (lab-31 even? (range 10000000) (/ 10000000 8)))
    (time (lab-31 even? (range 10000000) (/ 10000000 8)))
    (time (lab-31 even? (range 10000000) (/ 10000000 8)))
    (println "14")
    (time (lab-31 even? (range 10000000) (/ 10000000 14)))
    (time (lab-31 even? (range 10000000) (/ 10000000 14)))
    (time (lab-31 even? (range 10000000) (/ 10000000 14)))
    (time (lab-31 even? (range 10000000) (/ 10000000 14)))
    (println "non-parallel filter")
    (time (->> (filter even? (range 10000000)) (doall)))
    (time (->> (filter even? (range 10000000)) (doall)))
    (time (->> (filter even? (range 10000000)) (doall)))
    (time (->> (filter even? (range 10000000)) (doall)))))
